[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tk-normalizer"
version = "0.1.0"
description = "URL normalization library for consistent URL representation"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Terakeet", email = "engineering@terakeet.com"}
]
maintainers = [
    {name = "Terakeet", email = "engineering@terakeet.com"}
]
keywords = ["url", "normalization", "canonicalization", "web", "utilities"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Filters",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/terakeet/tk-normalizer"
Repository = "https://github.com/terakeet/tk-normalizer.git"
Issues = "https://github.com/terakeet/tk-normalizer/issues"
Documentation = "https://github.com/terakeet/tk-normalizer/blob/main/docs/ARCHITECTURE.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=tk_normalizer",
    "--cov-report=term-missing",
    "--cov-branch",
    "-vv",
]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]

[tool.ruff]
line-length = 120
target-version = "py311"
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    ".ruff_cache",
    "build",
    "dist",
    "*.egg-info",
    "htmlcov",
]

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "SIM",   # flake8-simplify
    "S",     # flake8-bandit
    "ANN",   # annotations
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "S101",   # use of assert in tests is fine
    "ANN002", # Args type hint skip
    "ANN003", # Kwargs type hint skip
    "ANN204", # Missing return type annotation for special method `__init__`
    "ANN401", # Allow Any type declaration
    "SIM108", # ternary operator required
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "ARG001", "ARG002", "S105", "S106", "ANN201"]
"test_*.py" = ["S101", "ARG001", "ARG002", "S105", "S106", "ANN201"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

[tool.coverage.run]
branch = true
source = ["src/tk_normalizer"]
omit = [
    "tests/*",
    "test_*.py",
    ".venv/*",
    "venv/*",
    "*/site-packages/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_covered = false
precision = 2
fail_under = 0
